AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tetris score server resources
Parameters:
  FrontendOrigin:
    Type: String
    NoEcho: true
    Description: Enter frontend origin
  DynamoDBCompetitionTableName:
    Type: String
  DynamoDBTableName:
    Type: String
  DynamoDBNewsTableName:
    Type: String
  DynamoDBTrainingTableName:
    Type: String
  SQSUrl:
    Type: String
    NoEcho: true
  SQSName:
    Type: String
  TetrisTrainingBucketName:
    Type: String

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Architectures:
      - x86_64
    Tracing: Active
    Environment:
      Variables:
        DYNAMODB_COMPETITION_TABLE_NAME: !Ref DynamoDBCompetitionTableName
        DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
        DYNAMODB_NEWS_TABLE_NAME: !Ref DynamoDBNewsTableName
        DYNAMODB_TRAINING_TABLE_NAME: !Ref DynamoDBTrainingTableName
        FRONTEND_ORIGIN: !Ref FrontendOrigin
        SQS_URL: !Ref SQSUrl
        TETRIS_TRAINING_BUCKET_NAME: !Ref TetrisTrainingBucketName

  Api:
    TracingEnabled: true

Resources:
  TetrisAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: tetris_api
      StageName: tetris_api_stage
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,Origin,Accept,X-Custom-Header'"
        AllowOrigin: "'http://localhost:8080'"
        MaxAge: "'-1'"

  GetEntriesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_entries_from_dynamodb
      Handler: get_entries_from_dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBCompetitionTableName
      Events:
        GetEntriesEndpoint:
          Type: Api
          Properties:
            Path: /entries
            Method: get
            RestApiId: !Ref TetrisAPI

  GetNewsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_news_from_dynamodb
      Handler: get_news_from_dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBNewsTableName
      Events:
        GetNewsEndpoint:
          Type: Api
          Properties:
            Path: /news
            Method: get
            RestApiId: !Ref TetrisAPI

  GetNewsDetailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_news_detail_from_dynamodb
      Handler: get_news_detail_from_dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBNewsTableName
      Events:
        GetNewsDetailEndpoint:
          Type: Api
          Properties:
            Path: /news/{id}
            Method: get
            RestApiId: !Ref TetrisAPI


  GetResultsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_results_from_dynamodb
      Handler: get_results_from_dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTableName
      Events:
        GetResultsEndpoint:
          Type: Api
          Properties:
            Path: /results
            Method: get
            RestApiId: !Ref TetrisAPI

  GetResultDetailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_result_detail_from_dynamodb
      Handler: get_result_detail_from_dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTableName
      Events:
        GetResultDetailEndpoint:
          Type: Api
          Properties:
            Path: /result/{id}
            Method: get
            RestApiId: !Ref TetrisAPI

  PostCompetitionEntryFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/post_competition_entry
      Handler: post_competition_entry.lambda_handler
      Runtime: python3.9
      Layers:
        - Ref: Layer
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref DynamoDBCompetitionTableName
      Events:
        PostCompetitionEtryEndpoint:
          Type: Api
          Properties:
            Path: /entry
            Method: post
            RestApiId: !Ref TetrisAPI

  PostEvaluationRequestFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/post_evaluation_request
      Handler: post_evaluation_request.lambda_handler
      Runtime: python3.9
      Layers:
        - Ref: Layer
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref DynamoDBTableName
        - SQSSendMessagePolicy:
            QueueName: !Ref SQSName
      Events:
        PostEvaluationRequestEndpoint:
          Type: Api
          Properties:
            Path: /evaluation
            Method: post
            RestApiId: !Ref TetrisAPI

  StopEvaluationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/stop_evaluation
      Handler: stop_evaluation.lambda_handler
      Runtime: python3.9
      Layers:
        - Ref: Layer
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTableName
      Events:
        StopEvaluationRequestEndpoint:
          Type: Api
          Properties:
            Path: /evaluation/cancel/{id}
            Method: put
            RestApiId: !Ref TetrisAPI

  PostTetrisTrainingCodeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/post_tetris_training_code
      Handler: post_tetris_training_code.lambda_handler
      Runtime: python3.9
      Timeout: 60
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref TetrisTrainingBucketName
      Events:
        PostTetrisTrainingCodeEndpoint:
          Type: Api
          Properties:
            Path: /training/{section}/{id}
            Method: post
            RestApiId: !Ref TetrisAPI

  GetTrainingDetailFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_training_detail_from_dynamodb
      Handler: get_training_detail_from_dynamodb.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTrainingTableName
      Events:
        GetTrainingDetailEndpoint:
          Type: Api
          Properties:
            Path: /training/{section}/{id}
            Method: get
            RestApiId: !Ref TetrisAPI

  GetSectionTrainingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./scripts/get_trainings_in_section
      Handler: get_trainings_in_section.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref DynamoDBTrainingTableName
      Events:
        GetSectionTrainingsEndpoint:
          Type: Api
          Properties:
            Path: /trainings/{section}
            Method: get
            RestApiId: !Ref TetrisAPI

  ChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: 868265869441.dkr.ecr.ap-northeast-1.amazonaws.com/chat
      Timeout: 120
      MemorySize: 512
      Policies:
        - AmazonDynamoDBFullAccess
        - SecretsManagerReadWrite
      Events:
        ChatAPP:
          Type: Api
          Properties:
            Path: /chat
            Method: get
            RestApiId: !Ref TetrisAPI
        ChatAPPPost:
          Type: Api 
          Properties:
            Path: /chat
            Method: post
            RestApiId: !Ref TetrisAPI
        ChatAPPPut:
          Type: Api 
          Properties:
            Path: /chat
            Method: put
            RestApiId: !Ref TetrisAPI
        ChatAPPDelete:
          Type: Api 
          Properties:
            Path: /chat
            Method: delete
            RestApiId: !Ref TetrisAPI
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./scripts/chat_function
      DockerTag: python3.9-v1
        

  Layer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./layer
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9

# Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  # HelloWorldApi:
  #   Description: API Gateway endpoint URL for Prod stage for Hello World function
  #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  # HelloWorldFunction:
  #   Description: Hello World Lambda Function ARN
  #   Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: Implicit IAM Role created for Hello World function
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
